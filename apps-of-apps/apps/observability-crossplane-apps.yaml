apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: observability-crossplane-apps
spec:
  goTemplate: true
  goTemplateOptions: [ "missingkey=error" ]
  generators:
  - list:
      elements:
      - name: crossplane-crd
        serverSideApply: true
        namespace: crossplane

      - name: crossplane-providers
        namespace: crossplane
        serverSideApply: true
      - name: crossplane-resources
        namespace: crossplane
        serverSideApply: true
      - name: aws-ebs-csi-driver
        namespace: crossplane
        serverSideApply: true
  template:
    metadata:
      name: "{{ .name }}"
      annotations:
        argocd.argoproj.io/manifest-generate-paths: "."
        # notifications.argoproj.io/subscribe.on-sync-succeeded.telegram: "-1001726711150"
        # argocd.argoproj.io/compare-options: '{{ printf "%s=%s" "ServerSideDiff" (dig "serverSideDiff" "false" . | toString) }}'
    spec:
      project: crossplane
      source:
        repoURL: git@github.com:alcps/kosmos-observability.git
        targetRevision: HEAD
        path: "crossplane/{{ .name }}"
        # plugin:
        #   name: avp-directory-include
        # env:
        #   - name: FILE_NAME
        #     value: "system/{{ .name }}"
      destination:
        name: in-cluster
        namespace: '{{ default .name (dig "namespace" "" .) }}'
      ignoreDifferences:
      - group: apiextensions.k8s.io
        kind: CustomResourceDefinition
        jqPathExpressions:
        - .spec.conversion.webhook.clientConfig.caBundle
      # FIXME: https://github.com/cloudnative-pg/charts/issues/426
      # - group: postgresql.cnpg.io
      #   kind: Cluster
      #   jqPathExpressions:
      #     - .spec.postgresql.pg_hba
      #     - .spec.postgresql.pg_ident
      - group: apps
        kind: "*"
        jqPathExpressions:
        - .spec.template.spec.hostUsers
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
        - CreateNamespace=true
        - ServerSideApply=true
        - RespectIgnoreDifferences=true
        - PruneLast=true
        - PrunePropagationPolicy=foreground
        - SkipDryRunOnMissingResource=true
        # - RespectIgnoreDifferences=false
        - '{{ printf "%s=%s" "ServerSideApply" (dig "serverSideApply" "true" . | toString) }}'
